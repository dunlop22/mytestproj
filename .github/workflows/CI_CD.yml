name: Django CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main


jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        ports: ['5432:5432']
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_NAME: postgres
      DATABASE_USER: postgres
      DATABASE_PASSWORD: password
      DATABASE_HOST: 109.195.38.77
      DATABASE_PORT: 5432
      SECRET_KEY: test-secret-key
      DEBUG: 'True'
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run migrations
      run: |
        python manage.py migrate

    - name: Run tests
      run: |
        pytest --maxfail=1 --disable-warnings -q

  deploy:
    runs-on: ubuntu-latest

    env:
      DATABASE_NAME: postgres
      DATABASE_USER: postgres
      DATABASE_PASSWORD: password
      DATABASE_HOST: 109.195.38.77
      DATABASE_PORT: 5432
      SECRET_KEY: test-secret-key
      DEBUG: 'True'

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build \
        --build-arg DATABASE_NAME=${{env.DATABASE_NAME }} \
        --build-arg DATABASE_USER=${{ env.DATABASE_USER }} \
        --build-arg DATABASE_PASSWORD=${{ env.DATABASE_PASSWORD }} \
        --build-arg DATABASE_HOST=${{ env.DATABASE_HOST }} \
        --build-arg DATABASE_PORT=${{ env.DATABASE_PORT }} \
        --build-arg SECRET_KEY=${{ env.SECRET_KEY }} \
        --build-arg DEBUG=${{ env.DEBUG }} \
        -t ${{ secrets.DOCKER_USERNAME }}/myproject:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/myproject:latest

    - name: SSH to server and deploy
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: 24
        script: |
           docker run --pull always -d --rm --name myproject -p 8000:8000 ${{ secrets.DOCKER_USERNAME }}/myproject:latest
